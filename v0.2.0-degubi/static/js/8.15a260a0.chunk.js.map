{"version":3,"sources":["components/Tokens/TokenDetails/Resource.tsx","graphql/data/nft/__generated__/DetailsQuery.graphql.ts","../node_modules/react-feather/dist/icons/upload.js","graphql/data/nft/Details.ts","nft/components/details/AssetDetails.tsx","nft/components/details/AssetPriceDetails.tsx","nft/components/details/AssetActivity.tsx","nft/components/details/AssetDetails.css.ts","nft/components/details/DetailsContainer.tsx","nft/components/details/InfoContainer.tsx","nft/components/details/TraitsContainer.tsx","nft/pages/asset/Asset.tsx"],"names":["ResourceLink","styled","ExternalLink","theme","accentAction","darken","Resource","name","link","href","node","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","v16","v17","v18","v19","v20","v21","v22","v23","v24","v25","v26","v27","v28","v29","v30","v31","v32","v33","v34","v35","v36","v37","v38","v39","v40","hash","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Upload","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","points","x1","y1","x2","y2","propTypes","PropTypes","string","oneOfType","number","displayName","detailsQuery","MediaType","hoverState","css","stateOverlayHover","stateOverlayPressed","Container","div","BestPriceContainer","backgroundSurface","backgroundOutline","HeaderRow","PriceRow","MarketplaceIcon","img","BuyNowButton","assetInBag","useAccentColor","accentFailure","backgroundInteractive","margin","BuyNowButtonContainer","Tertiary","ThemedText","BodySecondary","textTertiary","UploadLink","a","textSecondary","OpacityHoverState","NotForSaleContainer","DiscoveryContainer","OwnerText","OwnerInformationContainer","AssetInfoContainer","AssetHeader","textPrimary","CollectionNameContainer","CollectionHeader","span","DefaultLink","Link","OwnerContainer","asset","navigate","useNavigate","USDPrice","useUsdPrice","setSellPageState","useProfilePageState","state","setProfilePageState","selectSellAsset","useSellAsset","resetSellAssets","reset","account","useWeb3React","assetsFilter","address","tokenId","ownerAssets","useNftBalanceQuery","walletAssets","walletAsset","useMemo","listing","sellorders","undefined","cheapestOrder","expirationDate","Date","endAt","goToListPage","ProfilePageStateType","LISTING","SubHeader","fontWeight","lineHeight","marketplaceUrl","alt","marketplace","src","getMarketplaceIcon","MediumHeader","fontSize","formatEthPrice","priceInfo","ETHPrice","ethNumberStandardFormatter","timeLeft","onClick","StyledLink","NotForSale","collectionName","collectionUrl","useTheme","to","AssetPriceDetails","collection","itemsInBag","useBag","s","addAssetsToBag","removeAssetsFromBag","toggleBag","bagExpanded","some","item","isOwner","owner","toLowerCase","isForSale","isVerified","window","open","generateTweetForAsset","screen","tokenType","BodySmall","rel","shortenAddress","TR","tr","TH","th","Table","table","TD","td","PriceContainer","ActivityContainer","ScrollBarStyles","AssetActivity","eventsData","id","events","map","event","index","eventTimestamp","eventType","fromAddress","price","toAddress","transactionHash","formattedPrice","putCommas","toString","eventTransactionHash","eventOnly","getTimeDifference","Details","Header","Body","Center","CreatorLink","CopyIcon","Copy","GridItem","header","body","DetailsContainer","text","creator","totalSupply","useCopyClipboard","setCopied","copy","useCallback","substring","isOpen","transition","duration","timing","medium","ease","PrimaryHeader","SecondaryHeader","SecondaryHeaderContainer","ContentContainer","InfoContainer","children","primaryHeader","secondaryHeader","defaultOpen","useState","setIsOpen","Grid","GridItemContainer","TraitType","TraitValue","trait","collectionAddress","trait_type","trait_value","params","qs","stringify","traits","arrayFormat","TraitsContainer","sort","b","localeCompare","AssetPriceDetailsContainer","MediaContainer","Column","AddressTextLink","SocialsContainer","DescriptionText","RarityWrap","EmptyActivitiesContainer","RouterLink","ActivitySelectContainer","ContentNotAvailable","FilterBox","backgroundColor","ByText","Img","HoverImageContainer","HoverContainer","ContainerText","AudioPlayer","imageUrl","animationUrl","dominantColor","Box","position","display","alignSelf","as","className","controls","styles","style","join","initialFilterState","ActivityEventType","Listing","Sale","Transfer","CancelListing","AssetView","mediaType","autoPlay","muted","loop","AssetDetails","rarityProvider","rarity","providers","find","provider","primaryProvider","assetMediaType","isAudio","Audio","isVideo","Video","Image","contractAddress","token_id","useQuery","pageParam","ActivityFetcher","eventTypes","getNextPageParam","lastPage","cursor","refetchInterval","refetchIntervalInBackground","refetchOnWindowFocus","refetchOnMount","priceData","data","lastSalePrice","formattedEthprice","useReducer","reduceFilters","activeFilters","filtersDispatch","Filter","isActive","isDarkMode","useIsDarkMode","vars","gray500","gray200","themeVars","colors","charAt","slice","useInfiniteQuery","filter","fetchNextPage","hasNextPage","isFetchingNextPage","isSuccess","showHolder","setShowHolder","rarityProviderLogo","getRarityProviderLogo","pages","page","flat","onError","score","fallbackProvider","placement","$isHorizontalScroll","next","hasMore","loader","LoadingSparkle","dataLength","scrollableTarget","collectionDescription","externalUrl","twitterUrl","discordUrl","AssetContainer","Asset","useParams","useLazyLoadQuery","fetchPolicy","nftAssets","edges","listings","ethPrice","parseEther","value","notForSale","collectionSymbol","image","url","baseAsset","baseDecimals","basePrice","susFlag","suspiciousFlag","listingNode","protocolParameters","JSON","parse","smallImageUrl","smallImage","nftContracts","standard","collectionIsVerified","rarities","rank","ownerAddress","profile_img_url","profileImage","metadataUrl","description","collectionImageUrl","numAssets","twitterName","homepageUrl","useDetailsQuery","PageName","NFT_DETAILS_PAGE","properties","collection_address","shouldLogImpression","AssetPage","setBagExpanded","useQueryLoader","loadQuery","useEffect","useLoadDetailsQuery","useLoadNftBalanceQuery","manualClose","fallback","AssetDetailsLoading"],"mappings":"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","file":"static/js/8.15a260a0.chunk.js","sourcesContent":["import { darken } from 'polished'\nimport styled from 'styled-components/macro'\nimport { ExternalLink } from 'theme'\n\nconst ResourceLink = styled(ExternalLink)`\n  display: flex;\n  color: ${({ theme }) => theme.accentAction};\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 20px;\n  gap: 4px;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => darken(0.1, theme.accentAction)};\n    text-decoration: none;\n  }\n`\nexport default function Resource({ name, link }: { name: string; link: string }) {\n  return (\n    <ResourceLink href={link}>\n      {name}\n      <sup>↗</sup>\n    </ResourceLink>\n  )\n}\n","/**\n * @generated SignedSource<<8ff96d54b8b56b129e5b7b3c4a3bc591>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nexport type Currency = \"ETH\" | \"MATIC\" | \"USD\" | \"%future added value\";\nexport type NftMarketplace = \"CRYPTOPUNKS\" | \"FOUNDATION\" | \"LOOKSRARE\" | \"NFT20\" | \"NFTX\" | \"OPENSEA\" | \"SUDOSWAP\" | \"X2Y2\" | \"%future added value\";\nexport type NftRarityProvider = \"RARITY_SNIPER\" | \"%future added value\";\nexport type NftStandard = \"ERC1155\" | \"ERC721\" | \"NONCOMPLIANT\" | \"%future added value\";\nexport type OrderStatus = \"CANCELLED\" | \"EXECUTED\" | \"EXPIRED\" | \"VALID\" | \"%future added value\";\nexport type OrderType = \"LISTING\" | \"OFFER\" | \"%future added value\";\nexport type DetailsQuery$variables = {\n  address: string;\n  tokenId: string;\n};\nexport type DetailsQuery$data = {\n  readonly nftAssets: {\n    readonly edges: ReadonlyArray<{\n      readonly node: {\n        readonly animationUrl: string | null;\n        readonly collection: {\n          readonly description: string | null;\n          readonly discordUrl: string | null;\n          readonly homepageUrl: string | null;\n          readonly image: {\n            readonly url: string;\n          } | null;\n          readonly isVerified: boolean | null;\n          readonly name: string | null;\n          readonly nftContracts: ReadonlyArray<{\n            readonly address: string;\n            readonly standard: NftStandard | null;\n          }> | null;\n          readonly numAssets: number | null;\n          readonly twitterName: string | null;\n        } | null;\n        readonly creator: {\n          readonly address: string;\n          readonly isVerified: boolean | null;\n          readonly profileImage: {\n            readonly url: string;\n          } | null;\n        } | null;\n        readonly description: string | null;\n        readonly id: string;\n        readonly image: {\n          readonly url: string;\n        } | null;\n        readonly listings: {\n          readonly edges: ReadonlyArray<{\n            readonly cursor: string;\n            readonly node: {\n              readonly address: string;\n              readonly createdAt: number;\n              readonly endAt: number | null;\n              readonly id: string;\n              readonly maker: string;\n              readonly marketplace: NftMarketplace;\n              readonly marketplaceUrl: string;\n              readonly orderHash: string | null;\n              readonly price: {\n                readonly currency: Currency | null;\n                readonly value: number;\n              };\n              readonly protocolParameters: any | null;\n              readonly quantity: number;\n              readonly startAt: number;\n              readonly status: OrderStatus;\n              readonly taker: string | null;\n              readonly tokenId: string | null;\n              readonly type: OrderType;\n            };\n          }>;\n        } | null;\n        readonly metadataUrl: string | null;\n        readonly name: string | null;\n        readonly originalImage: {\n          readonly url: string;\n        } | null;\n        readonly ownerAddress: string | null;\n        readonly rarities: ReadonlyArray<{\n          readonly provider: NftRarityProvider | null;\n          readonly rank: number | null;\n          readonly score: number | null;\n        }> | null;\n        readonly smallImage: {\n          readonly url: string;\n        } | null;\n        readonly suspiciousFlag: boolean | null;\n        readonly tokenId: string;\n        readonly traits: ReadonlyArray<{\n          readonly name: string | null;\n          readonly value: string | null;\n        }> | null;\n      };\n    }>;\n  } | null;\n};\nexport type DetailsQuery = {\n  response: DetailsQuery$data;\n  variables: DetailsQuery$variables;\n};\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"address\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"tokenId\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"address\",\n    \"variableName\": \"address\"\n  },\n  {\n    \"fields\": [\n      {\n        \"kind\": \"Literal\",\n        \"name\": \"listed\",\n        \"value\": false\n      },\n      {\n        \"items\": [\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"tokenIds.0\",\n            \"variableName\": \"tokenId\"\n          }\n        ],\n        \"kind\": \"ListValue\",\n        \"name\": \"tokenIds\"\n      }\n    ],\n    \"kind\": \"ObjectValue\",\n    \"name\": \"filter\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"id\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"ownerAddress\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"url\",\n  \"storageKey\": null\n},\nv6 = [\n  (v5/*: any*/)\n],\nv7 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"Image\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"image\",\n  \"plural\": false,\n  \"selections\": (v6/*: any*/),\n  \"storageKey\": null\n},\nv8 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"tokenId\",\n  \"storageKey\": null\n},\nv9 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"description\",\n  \"storageKey\": null\n},\nv10 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"animationUrl\",\n  \"storageKey\": null\n},\nv11 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"suspiciousFlag\",\n  \"storageKey\": null\n},\nv12 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"address\",\n  \"storageKey\": null\n},\nv13 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"isVerified\",\n  \"storageKey\": null\n},\nv14 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"numAssets\",\n  \"storageKey\": null\n},\nv15 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"twitterName\",\n  \"storageKey\": null\n},\nv16 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"discordUrl\",\n  \"storageKey\": null\n},\nv17 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"homepageUrl\",\n  \"storageKey\": null\n},\nv18 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"standard\",\n  \"storageKey\": null\n},\nv19 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"first\",\n    \"value\": 1\n  }\n],\nv20 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"createdAt\",\n  \"storageKey\": null\n},\nv21 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"endAt\",\n  \"storageKey\": null\n},\nv22 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"maker\",\n  \"storageKey\": null\n},\nv23 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"marketplace\",\n  \"storageKey\": null\n},\nv24 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"marketplaceUrl\",\n  \"storageKey\": null\n},\nv25 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"orderHash\",\n  \"storageKey\": null\n},\nv26 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"currency\",\n  \"storageKey\": null\n},\nv27 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"value\",\n  \"storageKey\": null\n},\nv28 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"quantity\",\n  \"storageKey\": null\n},\nv29 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"startAt\",\n  \"storageKey\": null\n},\nv30 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"status\",\n  \"storageKey\": null\n},\nv31 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"taker\",\n  \"storageKey\": null\n},\nv32 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"type\",\n  \"storageKey\": null\n},\nv33 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"protocolParameters\",\n  \"storageKey\": null\n},\nv34 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"cursor\",\n  \"storageKey\": null\n},\nv35 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"provider\",\n  \"storageKey\": null\n},\nv36 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"rank\",\n  \"storageKey\": null\n},\nv37 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"score\",\n  \"storageKey\": null\n},\nv38 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"metadataUrl\",\n  \"storageKey\": null\n},\nv39 = [\n  (v5/*: any*/),\n  (v2/*: any*/)\n],\nv40 = {\n  \"alias\": null,\n  \"args\": null,\n  \"concreteType\": \"Image\",\n  \"kind\": \"LinkedField\",\n  \"name\": \"image\",\n  \"plural\": false,\n  \"selections\": (v39/*: any*/),\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"DetailsQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"NftAssetConnection\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"nftAssets\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"NftAssetEdge\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"edges\",\n            \"plural\": true,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"NftAsset\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"node\",\n                \"plural\": false,\n                \"selections\": [\n                  (v2/*: any*/),\n                  (v3/*: any*/),\n                  (v4/*: any*/),\n                  (v7/*: any*/),\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Image\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"smallImage\",\n                    \"plural\": false,\n                    \"selections\": (v6/*: any*/),\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Image\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"originalImage\",\n                    \"plural\": false,\n                    \"selections\": (v6/*: any*/),\n                    \"storageKey\": null\n                  },\n                  (v8/*: any*/),\n                  (v9/*: any*/),\n                  (v10/*: any*/),\n                  (v11/*: any*/),\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"NftProfile\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"creator\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v12/*: any*/),\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": \"Image\",\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"profileImage\",\n                        \"plural\": false,\n                        \"selections\": (v6/*: any*/),\n                        \"storageKey\": null\n                      },\n                      (v13/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"NftCollection\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"collection\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v3/*: any*/),\n                      (v13/*: any*/),\n                      (v14/*: any*/),\n                      (v15/*: any*/),\n                      (v16/*: any*/),\n                      (v17/*: any*/),\n                      (v7/*: any*/),\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": \"NftContract\",\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"nftContracts\",\n                        \"plural\": true,\n                        \"selections\": [\n                          (v12/*: any*/),\n                          (v18/*: any*/)\n                        ],\n                        \"storageKey\": null\n                      },\n                      (v9/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": (v19/*: any*/),\n                    \"concreteType\": \"NftOrderConnection\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"listings\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": \"NftOrderEdge\",\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"edges\",\n                        \"plural\": true,\n                        \"selections\": [\n                          {\n                            \"alias\": null,\n                            \"args\": null,\n                            \"concreteType\": \"NftOrder\",\n                            \"kind\": \"LinkedField\",\n                            \"name\": \"node\",\n                            \"plural\": false,\n                            \"selections\": [\n                              (v12/*: any*/),\n                              (v20/*: any*/),\n                              (v21/*: any*/),\n                              (v2/*: any*/),\n                              (v22/*: any*/),\n                              (v23/*: any*/),\n                              (v24/*: any*/),\n                              (v25/*: any*/),\n                              {\n                                \"alias\": null,\n                                \"args\": null,\n                                \"concreteType\": \"Amount\",\n                                \"kind\": \"LinkedField\",\n                                \"name\": \"price\",\n                                \"plural\": false,\n                                \"selections\": [\n                                  (v26/*: any*/),\n                                  (v27/*: any*/)\n                                ],\n                                \"storageKey\": null\n                              },\n                              (v28/*: any*/),\n                              (v29/*: any*/),\n                              (v30/*: any*/),\n                              (v31/*: any*/),\n                              (v8/*: any*/),\n                              (v32/*: any*/),\n                              (v33/*: any*/)\n                            ],\n                            \"storageKey\": null\n                          },\n                          (v34/*: any*/)\n                        ],\n                        \"storageKey\": null\n                      }\n                    ],\n                    \"storageKey\": \"listings(first:1)\"\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"NftAssetRarity\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"rarities\",\n                    \"plural\": true,\n                    \"selections\": [\n                      (v35/*: any*/),\n                      (v36/*: any*/),\n                      (v37/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  (v38/*: any*/),\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"NftAssetTrait\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"traits\",\n                    \"plural\": true,\n                    \"selections\": [\n                      (v3/*: any*/),\n                      (v27/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"DetailsQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"NftAssetConnection\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"nftAssets\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"NftAssetEdge\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"edges\",\n            \"plural\": true,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"NftAsset\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"node\",\n                \"plural\": false,\n                \"selections\": [\n                  (v2/*: any*/),\n                  (v3/*: any*/),\n                  (v4/*: any*/),\n                  (v40/*: any*/),\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Image\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"smallImage\",\n                    \"plural\": false,\n                    \"selections\": (v39/*: any*/),\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"Image\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"originalImage\",\n                    \"plural\": false,\n                    \"selections\": (v39/*: any*/),\n                    \"storageKey\": null\n                  },\n                  (v8/*: any*/),\n                  (v9/*: any*/),\n                  (v10/*: any*/),\n                  (v11/*: any*/),\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"NftProfile\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"creator\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v12/*: any*/),\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": \"Image\",\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"profileImage\",\n                        \"plural\": false,\n                        \"selections\": (v39/*: any*/),\n                        \"storageKey\": null\n                      },\n                      (v13/*: any*/),\n                      (v2/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"NftCollection\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"collection\",\n                    \"plural\": false,\n                    \"selections\": [\n                      (v3/*: any*/),\n                      (v13/*: any*/),\n                      (v14/*: any*/),\n                      (v15/*: any*/),\n                      (v16/*: any*/),\n                      (v17/*: any*/),\n                      (v40/*: any*/),\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": \"NftContract\",\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"nftContracts\",\n                        \"plural\": true,\n                        \"selections\": [\n                          (v12/*: any*/),\n                          (v18/*: any*/),\n                          (v2/*: any*/)\n                        ],\n                        \"storageKey\": null\n                      },\n                      (v9/*: any*/),\n                      (v2/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": (v19/*: any*/),\n                    \"concreteType\": \"NftOrderConnection\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"listings\",\n                    \"plural\": false,\n                    \"selections\": [\n                      {\n                        \"alias\": null,\n                        \"args\": null,\n                        \"concreteType\": \"NftOrderEdge\",\n                        \"kind\": \"LinkedField\",\n                        \"name\": \"edges\",\n                        \"plural\": true,\n                        \"selections\": [\n                          {\n                            \"alias\": null,\n                            \"args\": null,\n                            \"concreteType\": \"NftOrder\",\n                            \"kind\": \"LinkedField\",\n                            \"name\": \"node\",\n                            \"plural\": false,\n                            \"selections\": [\n                              (v12/*: any*/),\n                              (v20/*: any*/),\n                              (v21/*: any*/),\n                              (v2/*: any*/),\n                              (v22/*: any*/),\n                              (v23/*: any*/),\n                              (v24/*: any*/),\n                              (v25/*: any*/),\n                              {\n                                \"alias\": null,\n                                \"args\": null,\n                                \"concreteType\": \"Amount\",\n                                \"kind\": \"LinkedField\",\n                                \"name\": \"price\",\n                                \"plural\": false,\n                                \"selections\": [\n                                  (v26/*: any*/),\n                                  (v27/*: any*/),\n                                  (v2/*: any*/)\n                                ],\n                                \"storageKey\": null\n                              },\n                              (v28/*: any*/),\n                              (v29/*: any*/),\n                              (v30/*: any*/),\n                              (v31/*: any*/),\n                              (v8/*: any*/),\n                              (v32/*: any*/),\n                              (v33/*: any*/)\n                            ],\n                            \"storageKey\": null\n                          },\n                          (v34/*: any*/)\n                        ],\n                        \"storageKey\": null\n                      }\n                    ],\n                    \"storageKey\": \"listings(first:1)\"\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"NftAssetRarity\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"rarities\",\n                    \"plural\": true,\n                    \"selections\": [\n                      (v35/*: any*/),\n                      (v36/*: any*/),\n                      (v37/*: any*/),\n                      (v2/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  },\n                  (v38/*: any*/),\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"concreteType\": \"NftAssetTrait\",\n                    \"kind\": \"LinkedField\",\n                    \"name\": \"traits\",\n                    \"plural\": true,\n                    \"selections\": [\n                      (v3/*: any*/),\n                      (v27/*: any*/),\n                      (v2/*: any*/)\n                    ],\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"614aec51be138a694322837c39c2b19a\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"DetailsQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query DetailsQuery(\\n  $address: String!\\n  $tokenId: String!\\n) {\\n  nftAssets(address: $address, filter: {listed: false, tokenIds: [$tokenId]}) {\\n    edges {\\n      node {\\n        id\\n        name\\n        ownerAddress\\n        image {\\n          url\\n          id\\n        }\\n        smallImage {\\n          url\\n          id\\n        }\\n        originalImage {\\n          url\\n          id\\n        }\\n        tokenId\\n        description\\n        animationUrl\\n        suspiciousFlag\\n        creator {\\n          address\\n          profileImage {\\n            url\\n            id\\n          }\\n          isVerified\\n          id\\n        }\\n        collection {\\n          name\\n          isVerified\\n          numAssets\\n          twitterName\\n          discordUrl\\n          homepageUrl\\n          image {\\n            url\\n            id\\n          }\\n          nftContracts {\\n            address\\n            standard\\n            id\\n          }\\n          description\\n          id\\n        }\\n        listings(first: 1) {\\n          edges {\\n            node {\\n              address\\n              createdAt\\n              endAt\\n              id\\n              maker\\n              marketplace\\n              marketplaceUrl\\n              orderHash\\n              price {\\n                currency\\n                value\\n                id\\n              }\\n              quantity\\n              startAt\\n              status\\n              taker\\n              tokenId\\n              type\\n              protocolParameters\\n            }\\n            cursor\\n          }\\n        }\\n        rarities {\\n          provider\\n          rank\\n          score\\n          id\\n        }\\n        metadataUrl\\n        traits {\\n          name\\n          value\\n          id\\n        }\\n      }\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n\n(node as any).hash = \"71907572f7abd6bed7fde358e2b81be0\";\n\nexport default node;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Upload = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"17 8 12 3 7 8\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"3\",\n    x2: \"12\",\n    y2: \"15\"\n  }));\n});\nUpload.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nUpload.displayName = 'Upload';\nexport default Upload;","import { parseEther } from '@ethersproject/units'\nimport graphql from 'babel-plugin-relay/macro'\nimport { CollectionInfoForAsset, GenieAsset, SellOrder, TokenType } from 'nft/types'\nimport { useEffect } from 'react'\nimport { useLazyLoadQuery, useQueryLoader } from 'react-relay'\n\nimport { DetailsQuery } from './__generated__/DetailsQuery.graphql'\n\nconst detailsQuery = graphql`\n  query DetailsQuery($address: String!, $tokenId: String!) {\n    nftAssets(address: $address, filter: { listed: false, tokenIds: [$tokenId] }) {\n      edges {\n        node {\n          id\n          name\n          ownerAddress\n          image {\n            url\n          }\n          smallImage {\n            url\n          }\n          originalImage {\n            url\n          }\n          tokenId\n          description\n          animationUrl\n          suspiciousFlag\n          creator {\n            address\n            profileImage {\n              url\n            }\n            isVerified\n          }\n          collection {\n            name\n            isVerified\n            numAssets\n            twitterName\n            discordUrl\n            homepageUrl\n            image {\n              url\n            }\n            nftContracts {\n              address\n              standard\n            }\n            description\n          }\n          listings(first: 1) {\n            edges {\n              node {\n                address\n                createdAt\n                endAt\n                id\n                maker\n                marketplace\n                marketplaceUrl\n                orderHash\n                price {\n                  currency\n                  value\n                }\n                quantity\n                startAt\n                status\n                taker\n                tokenId\n                type\n                protocolParameters\n              }\n              cursor\n            }\n          }\n          rarities {\n            provider\n            rank\n            score\n          }\n          metadataUrl\n          traits {\n            name\n            value\n          }\n        }\n      }\n    }\n  }\n`\n\nexport function useLoadDetailsQuery(address?: string, tokenId?: string): void {\n  const [, loadQuery] = useQueryLoader(detailsQuery)\n  useEffect(() => {\n    if (address && tokenId) {\n      loadQuery({ address, tokenId })\n    }\n  }, [address, tokenId, loadQuery])\n}\n\nexport function useDetailsQuery(address: string, tokenId: string): [GenieAsset, CollectionInfoForAsset] | undefined {\n  const queryData = useLazyLoadQuery<DetailsQuery>(\n    detailsQuery,\n    {\n      address,\n      tokenId,\n    },\n    { fetchPolicy: 'store-or-network' }\n  )\n\n  const asset = queryData.nftAssets?.edges[0]?.node\n  const collection = asset?.collection\n  const listing = asset?.listings?.edges[0]?.node\n  const ethPrice = parseEther(listing?.price?.value?.toString() ?? '0').toString()\n\n  return [\n    {\n      id: asset?.id,\n      address,\n      notForSale: asset?.listings === null,\n      collectionName: asset?.collection?.name ?? undefined,\n      collectionSymbol: asset?.collection?.image?.url ?? undefined,\n      imageUrl: asset?.image?.url ?? undefined,\n      animationUrl: asset?.animationUrl ?? undefined,\n      // todo: fix the back/frontend discrepency here and drop the any\n      marketplace: listing?.marketplace.toLowerCase() as any,\n      name: asset?.name ?? undefined,\n      priceInfo: {\n        ETHPrice: ethPrice,\n        baseAsset: 'ETH',\n        baseDecimals: '18',\n        basePrice: ethPrice,\n      },\n      susFlag: asset?.suspiciousFlag ?? undefined,\n      sellorders: asset?.listings?.edges.map((listingNode) => {\n        return {\n          ...listingNode.node,\n          protocolParameters: listingNode.node.protocolParameters\n            ? JSON.parse(listingNode.node.protocolParameters.toString())\n            : undefined,\n        } as SellOrder\n      }),\n      smallImageUrl: asset?.smallImage?.url ?? undefined,\n      tokenId,\n      tokenType: (asset?.collection?.nftContracts && asset?.collection.nftContracts[0]?.standard) as TokenType,\n      collectionIsVerified: asset?.collection?.isVerified ?? undefined,\n      rarity: {\n        primaryProvider: 'Rarity Sniper', // TODO update when backend adds more providers\n        providers: asset?.rarities\n          ? asset?.rarities?.map((rarity) => {\n              return {\n                rank: rarity.rank ?? undefined,\n                score: rarity.score ?? undefined,\n                provider: 'Rarity Sniper',\n              }\n            })\n          : undefined,\n      },\n      owner: { address: asset?.ownerAddress ?? '' },\n      creator: {\n        profile_img_url: asset?.creator?.profileImage?.url ?? '',\n        address: asset?.creator?.address ?? '',\n      },\n      metadataUrl: asset?.metadataUrl ?? '',\n      traits: asset?.traits?.map((trait) => {\n        return { trait_type: trait.name ?? '', trait_value: trait.value ?? '' }\n      }),\n    },\n    {\n      collectionDescription: collection?.description ?? undefined,\n      collectionImageUrl: collection?.image?.url ?? undefined,\n      collectionName: collection?.name ?? undefined,\n      isVerified: collection?.isVerified ?? undefined,\n      totalSupply: collection?.numAssets ?? undefined,\n      twitterUrl: collection?.twitterName ?? undefined,\n      discordUrl: collection?.discordUrl ?? undefined,\n      externalUrl: collection?.homepageUrl ?? undefined,\n    },\n  ]\n}\n","import { OpacityHoverState, ScrollBarStyles } from 'components/Common'\nimport Resource from 'components/Tokens/TokenDetails/Resource'\nimport { MouseoverTooltip } from 'components/Tooltip/index'\nimport { Box } from 'nft/components/Box'\nimport { reduceFilters } from 'nft/components/collection/Activity'\nimport { LoadingSparkle } from 'nft/components/common/Loading/LoadingSparkle'\nimport { AssetPriceDetails } from 'nft/components/details/AssetPriceDetails'\nimport { Center } from 'nft/components/Flex'\nimport { themeVars, vars } from 'nft/css/sprinkles.css'\nimport { ActivityFetcher } from 'nft/queries/genie/ActivityFetcher'\nimport { ActivityEventResponse, ActivityEventType, CollectionInfoForAsset, GenieAsset } from 'nft/types'\nimport { shortenAddress } from 'nft/utils/address'\nimport { formatEthPrice } from 'nft/utils/currency'\nimport { isAudio } from 'nft/utils/isAudio'\nimport { isVideo } from 'nft/utils/isVideo'\nimport { putCommas } from 'nft/utils/putCommas'\nimport { fallbackProvider, getRarityProviderLogo } from 'nft/utils/rarity'\nimport { useCallback, useMemo, useReducer, useState } from 'react'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport { useInfiniteQuery, useQuery } from 'react-query'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { useIsDarkMode } from 'state/user/hooks'\nimport styled from 'styled-components/macro'\n\nimport AssetActivity from './AssetActivity'\nimport * as styles from './AssetDetails.css'\nimport DetailsContainer from './DetailsContainer'\nimport InfoContainer from './InfoContainer'\nimport TraitsContainer from './TraitsContainer'\n\nconst AssetPriceDetailsContainer = styled.div`\n  margin-top: 20px;\n  display: none;\n  @media (max-width: 960px) {\n    display: block;\n  }\n`\n\nconst MediaContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 780px;\n`\n\nconst AddressTextLink = styled.a`\n  display: inline-block;\n  color: ${({ theme }) => theme.textSecondary};\n  text-decoration: none;\n  max-width: 100%;\n  word-wrap: break-word;\n  ${OpacityHoverState};\n`\n\nconst SocialsContainer = styled.div`\n  display: flex;\n  gap: 16px;\n  margin-top: 20px;\n`\n\nconst DescriptionText = styled.div`\n  margin-top: 8px;\n  font-size: 14px;\n  line-height: 20px;\n`\n\nconst RarityWrap = styled.span`\n  display: flex;\n  color: ${({ theme }) => theme.textSecondary};\n  padding: 2px 4px;\n  border-radius: 4px;\n  align-items: center;\n  gap: 4px;\n`\n\nconst EmptyActivitiesContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  color: ${({ theme }) => theme.textPrimary};\n  font-size: 28px;\n  line-height: 36px;\n  padding: 56px 0px;\n`\n\nconst Link = styled(RouterLink)`\n  color: ${({ theme }) => theme.accentAction};\n  text-decoration: none;\n  font-size: 14px;\n  line-height: 16px;\n  margin-top: 12px;\n  cursor: pointer;\n  ${OpacityHoverState};\n`\n\nconst ActivitySelectContainer = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-bottom: 34px;\n  overflow-x: auto;\n  ${ScrollBarStyles}\n\n  @media (max-width: 720px) {\n    padding-bottom: 8px;\n  }\n`\n\nconst ContentNotAvailable = styled.div`\n  display: flex;\n  background-color: ${({ theme }) => theme.backgroundSurface};\n  color: ${({ theme }) => theme.textSecondary};\n  font-size: 14px;\n  line-height: 20px;\n  align-items: center;\n  justify-content: center;\n  border-radius: 12px;\n  width: 450px;\n  height: 450px;\n`\n\nconst FilterBox = styled.div<{ backgroundColor: string }>`\n  box-sizing: border-box;\n  background-color: ${({ backgroundColor }) => backgroundColor};\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 14px;\n  color: ${({ theme }) => theme.textPrimary};\n  padding: 8px 16px;\n  border-radius: 12px;\n  cursor: pointer;\n  box-sizing: border-box;\n  ${OpacityHoverState};\n`\n\nconst ByText = styled.span`\n  font-size: 14px;\n  line-height: 20px;\n`\n\nconst Img = styled.img`\n  background-color: white;\n`\n\nconst HoverImageContainer = styled.div`\n  display: flex;\n  margin-right: 4px;\n`\n\nconst HoverContainer = styled.div`\n  display: flex;\n`\n\nconst ContainerText = styled.span`\n  font-size: 14px;\n`\n\nconst AudioPlayer = ({\n  imageUrl,\n  animationUrl,\n  name,\n  collectionName,\n  dominantColor,\n}: GenieAsset & { dominantColor: [number, number, number] }) => {\n  return (\n    <Box position=\"relative\" display=\"inline-block\" alignSelf=\"center\">\n      <Box as=\"audio\" className={styles.audioControls} width=\"292\" controls src={animationUrl} />\n      <img\n        className={styles.image}\n        src={imageUrl}\n        alt={name || collectionName}\n        style={{\n          ['--shadow' as string]: `rgba(${dominantColor.join(', ')}, 0.5)`,\n          minWidth: '300px',\n          minHeight: '300px',\n        }}\n      />\n    </Box>\n  )\n}\n\nconst initialFilterState = {\n  [ActivityEventType.Listing]: true,\n  [ActivityEventType.Sale]: true,\n  [ActivityEventType.Transfer]: false,\n  [ActivityEventType.CancelListing]: false,\n}\n\nconst AssetView = ({\n  mediaType,\n  asset,\n  dominantColor,\n}: {\n  mediaType: 'image' | 'video' | 'audio'\n  asset: GenieAsset\n  dominantColor: [number, number, number]\n}) => {\n  const style = { ['--shadow' as string]: `rgba(${dominantColor.join(', ')}, 0.5)` }\n\n  switch (mediaType) {\n    case 'video':\n      return <video src={asset.animationUrl} className={styles.image} autoPlay controls muted loop style={style} />\n    case 'image':\n      return (\n        <img className={styles.image} src={asset.imageUrl} alt={asset.name || asset.collectionName} style={style} />\n      )\n    case 'audio':\n      return <AudioPlayer {...asset} dominantColor={dominantColor} />\n  }\n}\n\nenum MediaType {\n  Audio = 'audio',\n  Video = 'video',\n  Image = 'image',\n}\n\ninterface AssetDetailsProps {\n  asset: GenieAsset\n  collection: CollectionInfoForAsset\n}\n\nexport const AssetDetails = ({ asset, collection }: AssetDetailsProps) => {\n  const [dominantColor] = useState<[number, number, number]>([0, 0, 0])\n\n  const { rarityProvider } = useMemo(\n    () =>\n      asset.rarity\n        ? {\n            rarityProvider: asset?.rarity?.providers?.find(\n              ({ provider: _provider }) => _provider === asset.rarity?.primaryProvider\n            ),\n          }\n        : {},\n    [asset.rarity]\n  )\n\n  const assetMediaType = useMemo(() => {\n    if (isAudio(asset.animationUrl ?? '')) {\n      return MediaType.Audio\n    } else if (isVideo(asset.animationUrl ?? '')) {\n      return MediaType.Video\n    }\n    return MediaType.Image\n  }, [asset])\n\n  const { address: contractAddress, tokenId: token_id } = asset\n\n  const { data: priceData } = useQuery<ActivityEventResponse>(\n    [\n      'collectionActivity',\n      {\n        contractAddress,\n      },\n    ],\n    async ({ pageParam = '' }) => {\n      return await ActivityFetcher(\n        contractAddress,\n        {\n          token_id,\n          eventTypes: [ActivityEventType.Sale],\n        },\n        pageParam,\n        '1'\n      )\n    },\n    {\n      getNextPageParam: (lastPage) => {\n        return lastPage.events?.length === 25 ? lastPage.cursor : undefined\n      },\n      refetchInterval: 15000,\n      refetchIntervalInBackground: false,\n      refetchOnWindowFocus: false,\n      refetchOnMount: false,\n    }\n  )\n\n  const lastSalePrice = priceData?.events[0]?.price ?? null\n  const formattedEthprice = formatEthPrice(lastSalePrice ?? '') || 0\n  const formattedPrice = lastSalePrice ? putCommas(formattedEthprice).toString() : null\n  const [activeFilters, filtersDispatch] = useReducer(reduceFilters, initialFilterState)\n\n  const Filter = useCallback(\n    function ActivityFilter({ eventType }: { eventType: ActivityEventType }) {\n      const isActive = activeFilters[eventType]\n      const isDarkMode = useIsDarkMode()\n\n      return (\n        <FilterBox\n          backgroundColor={\n            isActive ? (isDarkMode ? vars.color.gray500 : vars.color.gray200) : themeVars.colors.backgroundInteractive\n          }\n          onClick={() => filtersDispatch({ eventType })}\n        >\n          {eventType === ActivityEventType.CancelListing\n            ? 'Cancellations'\n            : eventType.charAt(0) + eventType.slice(1).toLowerCase() + 's'}\n        </FilterBox>\n      )\n    },\n    [activeFilters]\n  )\n\n  const {\n    data: eventsData,\n    fetchNextPage,\n    hasNextPage,\n    isFetchingNextPage,\n    isSuccess,\n  } = useInfiniteQuery<ActivityEventResponse>(\n    [\n      'collectionActivity',\n      {\n        contractAddress,\n        activeFilters,\n        token_id,\n      },\n    ],\n    async ({ pageParam = '' }) => {\n      return await ActivityFetcher(\n        contractAddress,\n        {\n          token_id,\n          eventTypes: Object.keys(activeFilters)\n            .map((key) => key as ActivityEventType)\n            .filter((key) => activeFilters[key]),\n        },\n        pageParam\n      )\n    },\n    {\n      getNextPageParam: (lastPage) => {\n        return lastPage.events?.length === 25 ? lastPage.cursor : undefined\n      },\n      refetchInterval: 15000,\n      refetchIntervalInBackground: false,\n      refetchOnWindowFocus: false,\n      refetchOnMount: false,\n    }\n  )\n\n  const rarity = asset?.rarity?.providers?.length ? asset?.rarity?.providers?.[0] : undefined\n  const [showHolder, setShowHolder] = useState(false)\n  const rarityProviderLogo = getRarityProviderLogo(rarity?.provider)\n  const events = useMemo(\n    () => (isSuccess ? eventsData?.pages.map((page) => page.events).flat() : null),\n    [isSuccess, eventsData]\n  )\n\n  return (\n    <Column>\n      <MediaContainer>\n        {asset.imageUrl === undefined || showHolder ? (\n          <ContentNotAvailable>Content not available yet</ContentNotAvailable>\n        ) : assetMediaType === MediaType.Image ? (\n          <Img\n            className={styles.image}\n            src={asset.imageUrl}\n            alt={asset.name || collection.collectionName}\n            onError={() => setShowHolder(true)}\n          />\n        ) : (\n          <AssetView asset={asset} mediaType={assetMediaType} dominantColor={dominantColor} />\n        )}\n      </MediaContainer>\n      <AssetPriceDetailsContainer>\n        <AssetPriceDetails asset={asset} collection={collection} />\n      </AssetPriceDetailsContainer>\n      {asset.traits && (\n        <InfoContainer\n          primaryHeader=\"Traits\"\n          defaultOpen\n          secondaryHeader={\n            rarityProvider && rarity && rarity.score ? (\n              <MouseoverTooltip\n                text={\n                  <HoverContainer>\n                    <HoverImageContainer>\n                      <img src={rarityProviderLogo} alt=\"cardLogo\" width={16} />\n                    </HoverImageContainer>\n                    <ContainerText>\n                      {`Ranking by ${rarity.provider === 'Genie' ? fallbackProvider : rarity.provider}`}\n                    </ContainerText>\n                  </HoverContainer>\n                }\n                placement=\"top\"\n              >\n                <RarityWrap>Rarity: {putCommas(rarity.score)}</RarityWrap>\n              </MouseoverTooltip>\n            ) : null\n          }\n        >\n          <TraitsContainer asset={asset} />\n        </InfoContainer>\n      )}\n      <InfoContainer\n        primaryHeader=\"Activity\"\n        defaultOpen\n        secondaryHeader={formattedPrice ? `Last Sale: ${formattedPrice} ETH` : undefined}\n      >\n        <>\n          <ActivitySelectContainer $isHorizontalScroll>\n            <Filter eventType={ActivityEventType.Listing} />\n            <Filter eventType={ActivityEventType.Sale} />\n            <Filter eventType={ActivityEventType.Transfer} />\n            <Filter eventType={ActivityEventType.CancelListing} />\n          </ActivitySelectContainer>\n          {events && events.length > 0 ? (\n            <InfiniteScroll\n              next={fetchNextPage}\n              hasMore={!!hasNextPage}\n              loader={\n                isFetchingNextPage ? (\n                  <Center>\n                    <LoadingSparkle />\n                  </Center>\n                ) : null\n              }\n              dataLength={events?.length ?? 0}\n              scrollableTarget=\"activityContainer\"\n            >\n              <AssetActivity eventsData={{ events }} />\n            </InfiniteScroll>\n          ) : (\n            <EmptyActivitiesContainer>\n              <div>No activities yet</div>\n              <Link to={`/nfts/collection/${asset.address}`}>View collection items</Link>{' '}\n            </EmptyActivitiesContainer>\n          )}\n        </>\n      </InfoContainer>\n      <InfoContainer primaryHeader=\"Description\" defaultOpen secondaryHeader={null}>\n        <>\n          <ByText>By </ByText>\n          {asset?.creator && asset.creator?.address && (\n            <AddressTextLink\n              href={`https://etherscan.io/address/${asset.creator.address}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {shortenAddress(asset.creator.address, 2, 4)}\n            </AddressTextLink>\n          )}\n\n          <DescriptionText>{collection.collectionDescription}</DescriptionText>\n          <SocialsContainer>\n            {collection.externalUrl && <Resource name=\"Website\" link={`${collection.externalUrl}`} />}\n            {collection.twitterUrl && <Resource name=\"Twitter\" link={`https://twitter.com/${collection.twitterUrl}`} />}\n            {collection.discordUrl && <Resource name=\"Discord\" link={collection.discordUrl} />}\n          </SocialsContainer>\n        </>\n      </InfoContainer>\n      <InfoContainer primaryHeader=\"Details\" defaultOpen secondaryHeader={null}>\n        <DetailsContainer asset={asset} collection={collection} />\n      </InfoContainer>\n    </Column>\n  )\n}\n","import { useWeb3React } from '@web3-react/core'\nimport { OpacityHoverState } from 'components/Common'\nimport { useNftBalanceQuery } from 'graphql/data/nft/NftBalance'\nimport { CancelListingIcon, VerifiedIcon } from 'nft/components/icons'\nimport { useBag, useProfilePageState, useSellAsset } from 'nft/hooks'\nimport { CollectionInfoForAsset, GenieAsset, ProfilePageStateType, WalletAsset } from 'nft/types'\nimport {\n  ethNumberStandardFormatter,\n  formatEthPrice,\n  generateTweetForAsset,\n  getMarketplaceIcon,\n  timeLeft,\n  useUsdPrice,\n} from 'nft/utils'\nimport { shortenAddress } from 'nft/utils/address'\nimport { useMemo } from 'react'\nimport { Upload } from 'react-feather'\nimport { Link, useNavigate } from 'react-router-dom'\nimport styled, { css, useTheme } from 'styled-components/macro'\nimport { ExternalLink, ThemedText } from 'theme'\n\nconst TWITTER_WIDTH = 560\nconst TWITTER_HEIGHT = 480\n\ninterface AssetPriceDetailsProps {\n  asset: GenieAsset\n  collection: CollectionInfoForAsset\n}\n\nconst hoverState = css`\n  :hover::after {\n    border-radius: 12px;\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: ${({ theme }) => theme.stateOverlayHover};\n    z-index: 0;\n  }\n\n  :active::after {\n    border-radius: 12px;\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: ${({ theme }) => theme.stateOverlayPressed};\n    z-index: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 24px;\n\n  @media (min-width: calc(960px + 1px)) {\n    position: fixed;\n    width: 360px;\n    margin-top: 20px;\n  }\n`\n\nconst BestPriceContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 12px;\n  background-color: ${({ theme }) => theme.backgroundSurface};\n  border: 1px solid ${({ theme }) => theme.backgroundOutline};\n  border-radius: 16px;\n`\n\nconst HeaderRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\n\nconst PriceRow = styled.div`\n  display: flex;\n  gap: 12px;\n  align-items: flex-end;\n`\n\nconst MarketplaceIcon = styled.img`\n  width: 20px;\n  height: 20px;\n  border-radius: 4px;\n  margin-top: auto;\n  margin-bottom: auto;\n`\n\nconst BuyNowButton = styled.div<{ assetInBag: boolean; margin: boolean; useAccentColor: boolean }>`\n  position: relative;\n  width: 100%;\n  background-color: ${({ theme, assetInBag, useAccentColor }) =>\n    assetInBag ? theme.accentFailure : useAccentColor ? theme.accentAction : theme.backgroundInteractive};\n  border-radius: 12px;\n  padding: 10px 12px;\n  margin-top: ${({ margin }) => (margin ? '12px' : '0px')};\n  text-align: center;\n  cursor: pointer;\n\n  ${hoverState}\n`\n\nconst BuyNowButtonContainer = styled.div`\n  position: relative;\n`\n\nconst Tertiary = styled(ThemedText.BodySecondary)`\n  color: ${({ theme }) => theme.textTertiary};\n`\n\nconst UploadLink = styled.a`\n  color: ${({ theme }) => theme.textSecondary};\n  cursor: pointer;\n\n  ${OpacityHoverState}\n`\n\nconst NotForSaleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  padding: 48px 18px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst DiscoveryContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst OwnerText = styled.a`\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 20px;\n  color: ${({ theme }) => theme.textSecondary};\n  text-decoration: none;\n\n  ${OpacityHoverState}\n`\n\nconst OwnerInformationContainer = styled.div`\n  color: ${({ theme }) => theme.textSecondary};\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 0 8px;\n`\n\nconst AssetInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`\n\nconst AssetHeader = styled.div`\n  display: -webkit-box;\n  align-items: center;\n  font-size: 28px;\n  font-weight: 500;\n  line-height: 36px;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: ${({ theme }) => theme.textPrimary};\n`\n\nconst CollectionNameContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\n\nconst CollectionHeader = styled.span`\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 24px;\n  color: ${({ theme }) => theme.textPrimary};\n  text-decoration: none;\n  ${OpacityHoverState};\n`\n\nconst DefaultLink = styled(Link)`\n  text-decoration: none;\n`\n\nexport const OwnerContainer = ({ asset }: { asset: GenieAsset }) => {\n  const navigate = useNavigate()\n  const USDPrice = useUsdPrice(asset)\n  const setSellPageState = useProfilePageState((state) => state.setProfilePageState)\n  const selectSellAsset = useSellAsset((state) => state.selectSellAsset)\n  const resetSellAssets = useSellAsset((state) => state.reset)\n  const { account } = useWeb3React()\n  const assetsFilter = [{ address: asset.address, tokenId: asset.tokenId }]\n  const { walletAssets: ownerAssets } = useNftBalanceQuery(account ?? '', [], assetsFilter, 1)\n  const walletAsset: WalletAsset = useMemo(() => ownerAssets[0], [ownerAssets])\n\n  const listing = asset.sellorders && asset.sellorders.length > 0 ? asset.sellorders[0] : undefined\n  const cheapestOrder = asset.sellorders && asset.sellorders.length > 0 ? asset.sellorders[0] : undefined\n  const expirationDate = cheapestOrder ? new Date(cheapestOrder.endAt) : undefined\n\n  const goToListPage = () => {\n    resetSellAssets()\n    navigate('/nfts/profile')\n    selectSellAsset(walletAsset)\n    setSellPageState(ProfilePageStateType.LISTING)\n  }\n\n  return (\n    <BestPriceContainer>\n      <HeaderRow>\n        <ThemedText.SubHeader color=\"accentAction\" fontWeight={500} lineHeight=\"24px\">\n          {listing ? 'Your Price' : 'List for Sale'}\n        </ThemedText.SubHeader>\n        {listing && (\n          <ExternalLink href={listing.marketplaceUrl}>\n            <MarketplaceIcon alt={listing.marketplace} src={getMarketplaceIcon(listing.marketplace)} />\n          </ExternalLink>\n        )}\n      </HeaderRow>\n      <PriceRow>\n        {listing ? (\n          <>\n            <ThemedText.MediumHeader fontSize=\"28px\" lineHeight=\"36px\">\n              {formatEthPrice(asset.priceInfo.ETHPrice)} ETH\n            </ThemedText.MediumHeader>\n            {USDPrice && (\n              <ThemedText.BodySecondary lineHeight=\"24px\">\n                {ethNumberStandardFormatter(USDPrice, true, true)}\n              </ThemedText.BodySecondary>\n            )}\n          </>\n        ) : (\n          <ThemedText.BodySecondary fontSize=\"14px\" lineHeight=\"20px\">\n            Get the best price for your NFT by selling with Uniswap.\n          </ThemedText.BodySecondary>\n        )}\n      </PriceRow>\n      {expirationDate && (\n        <ThemedText.BodySecondary fontSize=\"14px\">Sale ends: {timeLeft(expirationDate)}</ThemedText.BodySecondary>\n      )}\n      {!listing ? (\n        <BuyNowButton assetInBag={false} margin={true} useAccentColor={true} onClick={goToListPage}>\n          <ThemedText.SubHeader lineHeight=\"20px\">List</ThemedText.SubHeader>\n        </BuyNowButton>\n      ) : (\n        <>\n          <BuyNowButton assetInBag={false} margin={true} useAccentColor={false} onClick={goToListPage}>\n            <ThemedText.SubHeader lineHeight=\"20px\">Adjust listing</ThemedText.SubHeader>\n          </BuyNowButton>\n        </>\n      )}\n    </BestPriceContainer>\n  )\n}\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  ${OpacityHoverState}\n`\n\nexport const NotForSale = ({ collectionName, collectionUrl }: { collectionName: string; collectionUrl: string }) => {\n  const theme = useTheme()\n\n  return (\n    <BestPriceContainer>\n      <NotForSaleContainer>\n        <CancelListingIcon width=\"79px\" height=\"79px\" color={theme.textTertiary} />\n        <ThemedText.SubHeader fontWeight={500} lineHeight=\"24px\">\n          Not for sale\n        </ThemedText.SubHeader>\n        <DiscoveryContainer>\n          <ThemedText.BodySecondary fontSize=\"14px\" lineHeight=\"20px\">\n            Discover similar NFTs for sale in\n          </ThemedText.BodySecondary>\n          <StyledLink to={`/nfts/collection/${collectionUrl}`}>\n            <ThemedText.Link lineHeight=\"20px\">{collectionName}</ThemedText.Link>\n          </StyledLink>\n        </DiscoveryContainer>\n      </NotForSaleContainer>\n    </BestPriceContainer>\n  )\n}\n\nexport const AssetPriceDetails = ({ asset, collection }: AssetPriceDetailsProps) => {\n  const { account } = useWeb3React()\n\n  const cheapestOrder = asset.sellorders && asset.sellorders.length > 0 ? asset.sellorders[0] : undefined\n  const expirationDate = cheapestOrder ? new Date(cheapestOrder.endAt) : undefined\n\n  const itemsInBag = useBag((s) => s.itemsInBag)\n  const addAssetsToBag = useBag((s) => s.addAssetsToBag)\n  const removeAssetsFromBag = useBag((s) => s.removeAssetsFromBag)\n  const toggleBag = useBag((s) => s.toggleBag)\n  const bagExpanded = useBag((s) => s.bagExpanded)\n\n  const USDPrice = useUsdPrice(asset)\n\n  const { assetInBag } = useMemo(() => {\n    return {\n      assetInBag: itemsInBag.some(\n        (item) => asset.tokenId === item.asset.tokenId && asset.address === item.asset.address\n      ),\n    }\n  }, [asset, itemsInBag])\n\n  const shareTweet = () => {\n    window.open(\n      generateTweetForAsset(asset),\n      'newwindow',\n      `left=${(window.screen.width - TWITTER_WIDTH) / 2}, top=${\n        (window.screen.height - TWITTER_HEIGHT) / 2\n      }, width=${TWITTER_WIDTH}, height=${TWITTER_HEIGHT}`\n    )\n  }\n\n  const isOwner = asset.owner ? account?.toLowerCase() === asset.owner?.address?.toLowerCase() : false\n  const isForSale = cheapestOrder && asset.priceInfo\n\n  return (\n    <Container>\n      <AssetInfoContainer>\n        <CollectionNameContainer>\n          <DefaultLink to={`/nfts/collection/${asset.address}`}>\n            <CollectionHeader>\n              {collection.collectionName} {collection.isVerified && <VerifiedIcon />}\n            </CollectionHeader>\n          </DefaultLink>\n          <UploadLink onClick={shareTweet} target=\"_blank\">\n            <Upload size={20} strokeWidth={2} />\n          </UploadLink>\n        </CollectionNameContainer>\n        <AssetHeader>{asset.name ?? `${asset.collectionName} #${asset.tokenId}`}</AssetHeader>\n      </AssetInfoContainer>\n      {isOwner ? (\n        <OwnerContainer asset={asset} />\n      ) : isForSale ? (\n        <BestPriceContainer>\n          <HeaderRow>\n            <ThemedText.SubHeader color=\"accentAction\" fontWeight={500} lineHeight=\"24px\">\n              Best Price\n            </ThemedText.SubHeader>\n            <ExternalLink href={cheapestOrder.marketplaceUrl}>\n              <MarketplaceIcon alt={cheapestOrder.marketplace} src={getMarketplaceIcon(cheapestOrder.marketplace)} />\n            </ExternalLink>\n          </HeaderRow>\n          <PriceRow>\n            <ThemedText.MediumHeader fontSize=\"28px\" lineHeight=\"36px\">\n              {formatEthPrice(asset.priceInfo.ETHPrice)} ETH\n            </ThemedText.MediumHeader>\n            {USDPrice && (\n              <ThemedText.BodySecondary lineHeight=\"24px\">\n                {ethNumberStandardFormatter(USDPrice, true, true)}\n              </ThemedText.BodySecondary>\n            )}\n          </PriceRow>\n          {expirationDate && expirationDate > new Date() && (\n            <Tertiary fontSize=\"14px\">Sale ends: {timeLeft(expirationDate)}</Tertiary>\n          )}\n          <div>\n            <BuyNowButtonContainer>\n              <BuyNowButton\n                assetInBag={assetInBag}\n                margin={true}\n                useAccentColor={true}\n                onClick={() => {\n                  assetInBag ? removeAssetsFromBag([asset]) : addAssetsToBag([asset])\n                  if (!assetInBag && !bagExpanded) {\n                    toggleBag()\n                  }\n                }}\n              >\n                <ThemedText.SubHeader color=\"white\" lineHeight=\"20px\">\n                  <span>{assetInBag ? 'Remove' : 'Add to Bag'}</span>\n                </ThemedText.SubHeader>\n              </BuyNowButton>\n            </BuyNowButtonContainer>\n          </div>\n        </BestPriceContainer>\n      ) : (\n        <NotForSale collectionName={collection.collectionName ?? 'this collection'} collectionUrl={asset.address} />\n      )}\n      {isForSale && (\n        <OwnerInformationContainer>\n          {asset.tokenType !== 'ERC1155' && asset.owner.address && (\n            <ThemedText.BodySmall color=\"textSecondary\" lineHeight=\"20px\">\n              Seller:\n            </ThemedText.BodySmall>\n          )}\n          <OwnerText\n            target=\"_blank\"\n            href={`https://etherscan.io/address/${asset.owner.address}`}\n            rel=\"noopener noreferrer\"\n          >\n            {asset.tokenType === 'ERC1155' ? (\n              ''\n            ) : (\n              <span> {isOwner ? 'You' : asset.owner.address && shortenAddress(asset.owner.address, 2, 4)}</span>\n            )}\n          </OwnerText>\n        </OwnerInformationContainer>\n      )}\n    </Container>\n  )\n}\n","import { OpacityHoverState, ScrollBarStyles } from 'components/Common'\nimport { ActivityEventResponse } from 'nft/types'\nimport { shortenAddress } from 'nft/utils/address'\nimport { formatEthPrice } from 'nft/utils/currency'\nimport { getTimeDifference } from 'nft/utils/date'\nimport { putCommas } from 'nft/utils/putCommas'\nimport styled from 'styled-components/macro'\n\nimport { EventCell } from '../collection/ActivityCells'\nimport { MarketplaceIcon } from '../collection/ActivityCells'\n\nconst TR = styled.tr`\n  border-bottom: ${({ theme }) => `1px solid ${theme.backgroundOutline}`};\n  width: 100%;\n\n  &:last-child {\n    border-bottom: none;\n  }\n`\n\nconst TH = styled.th`\n  color: ${({ theme }) => theme.textSecondary};\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 20px;\n  width: 20%;\n\n  @media (max-width: 960px) {\n    &:nth-child(4) {\n      display: none;\n    }\n  }\n\n  @media (max-width: 720px) {\n    &:nth-child(2) {\n      display: none;\n    }\n  }\n`\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  text-align: left;\n  width: 100%;\n`\n\nconst TD = styled.td`\n  height: 56px;\n  padding: 8px 0px;\n  text-align: left;\n  vertical-align: middle;\n  width: 20%;\n\n  @media (max-width: 960px) {\n    &:nth-child(4) {\n      display: none;\n    }\n  }\n\n  @media (max-width: 720px) {\n    &:nth-child(2) {\n      display: none;\n    }\n  }\n`\n\nconst PriceContainer = styled.div`\n  align-items: center;\n  display: flex;\n  gap: 8px;\n`\n\nconst Link = styled.a`\n  color: ${({ theme }) => theme.textPrimary};\n  text-decoration: none;\n\n  ${OpacityHoverState}\n`\n\nconst ActivityContainer = styled.div`\n  max-height: 310px;\n  overflow: auto;\n\n  ${ScrollBarStyles}\n`\n\nconst AssetActivity = ({ eventsData }: { eventsData: ActivityEventResponse | undefined }) => {\n  return (\n    <ActivityContainer id=\"activityContainer\">\n      <Table>\n        <thead>\n          <TR>\n            <TH>Event</TH>\n            <TH>Price</TH>\n            <TH>By</TH>\n            <TH>To</TH>\n            <TH>Time</TH>\n          </TR>\n        </thead>\n        <tbody>\n          {eventsData?.events &&\n            eventsData.events.map((event, index) => {\n              const { eventTimestamp, eventType, fromAddress, marketplace, price, toAddress, transactionHash } = event\n              const formattedPrice = price ? putCommas(formatEthPrice(price)).toString() : null\n\n              return (\n                <TR key={index}>\n                  <TD>\n                    <EventCell\n                      eventType={eventType}\n                      eventTimestamp={eventTimestamp}\n                      eventTransactionHash={transactionHash}\n                      eventOnly\n                    />\n                  </TD>\n                  <TD>\n                    {formattedPrice && (\n                      <PriceContainer>\n                        {marketplace && <MarketplaceIcon marketplace={marketplace} />}\n                        {formattedPrice} ETH\n                      </PriceContainer>\n                    )}\n                  </TD>\n\n                  <TD>\n                    {fromAddress && (\n                      <Link\n                        href={`https://etherscan.io/address/${fromAddress}`}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        {shortenAddress(fromAddress, 2, 4)}\n                      </Link>\n                    )}\n                  </TD>\n\n                  <TD>\n                    {toAddress && (\n                      <Link\n                        href={`https://etherscan.io/address/${toAddress}`}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        {shortenAddress(toAddress, 2, 4)}\n                      </Link>\n                    )}\n                  </TD>\n                  <TD>{eventTimestamp && getTimeDifference(eventTimestamp.toString())}</TD>\n                </TR>\n              )\n            })}\n        </tbody>\n      </Table>\n    </ActivityContainer>\n  )\n}\n\nexport default AssetActivity\n","import \"src/nft/css/sprinkles.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/sprinkles.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted/dist/vanilla-extract-webpack-plugin-extracted.cjs.js\"\nimport \"src/nft/css/common.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/common.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll8xMjdsOGhkZiB7CiAgYm9yZGVyOiBub25lOwp9Ci5fMTI3bDhoZGY6aG92ZXIgewogIGN1cnNvcjogcG9pbnRlcjsKfQouXzEyN2w4aGRmOmRpc2FibGVkIHsKICBjdXJzb3I6IGF1dG87Cn0KLl8xMjdsOGhkaCB7CiAgcGFkZGluZzogMTRweCAxOHB4Owp9Ci5fMTI3bDhoZGg6ZGlzYWJsZWQgewogIG9wYWNpdHk6IDAuMzsKfQouXzEyN2w4aGRqIHsKICBwYWRkaW5nOiAxOXB4IDE3cHg7CiAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICB0ZXh0LWFsaWduOiBsZWZ0Owp9Ci5fMTI3bDhoZGs6OmJlZm9yZSB7CiAgY29udGVudDogIiI7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGluc2V0OiAtMXB4OwogIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg5MS40NmRlZywgIzQ2NzNGQSAwJSwgIzk2NDZGQSAxMDAuMTMlKSBib3JkZXItYm94OwogIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgLXdlYmtpdC1tYXNrOiBsaW5lYXItZ3JhZGllbnQoI2ZmZiAwIDApIHBhZGRpbmctYm94LCBsaW5lYXItZ3JhZGllbnQoI2ZmZiAwIDApOzsKICAtd2Via2l0LW1hc2stY29tcG9zaXRlOiB4b3I7OwogIG1hc2stY29tcG9zaXRlOiBleGNsdWRlOwogIGJvcmRlci1zdHlsZTogc29saWQ7CiAgYm9yZGVyLXdpZHRoOiAxcHg7CiAgYm9yZGVyLXJhZGl1czogaW5oZXJpdDsKICBwb2ludGVyLWV2ZW50czogbm9uZTsKfQouXzEyN2w4aGRsOjpiZWZvcmUgewogIG9wYWNpdHk6IDA7CiAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2U7CiAgLW1vei10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2U7CiAgLW1zLXRyYW5zaXRpb246IG9wYWNpdHkgMC4yNXMgZWFzZTsKICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMjVzIGVhc2Utb3V0Owp9Ci5fMTI3bDhoZGw6aG92ZXI6OmJlZm9yZSB7CiAgb3BhY2l0eTogMTsKfQouXzEyN2w4aGRuOmhvdmVyIHsKICBiYWNrZ3JvdW5kOiB2YXIoLS1yZ3c2ZXoxeSk7Cn0=\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted/dist/vanilla-extract-webpack-plugin-extracted.cjs.js\"\nimport \"src/nft/components/details/AssetDetails.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/components/details/AssetDetails.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#H4sIAAAAAAAAA3VT7Y6jIBT9P09BJmnSJqVBU6212WTfY7PZoF6VHYQG8GNmM+++CNbqrPuHkHsPh3POhdOv4F3WZdEH6M8LQg0dcA2sqk2Kcsrz/ZV0NcIoiKP7cLiNCCZmxJmQ+3CbjvWsMHWKLslUy+SAdU0L2afIllA4LtG4dFTt8dQ7HF0zmJuqyuj+Qo4oCKIjCiO7I6fQXv35cnpoDb3WhRKnNSBe7PXitC4ORD8KaiimuWEdfHs1qoXXn47EwGBwAblU1DApUtSKAhRnAm7/dnEuuVTpZEBVfQwf4jAD56NYlqUGKyvxUXylMTXL3wRonaLQIzaIf68tJE6uC5V9MFGldq/sfdiWVsCrA1LOKoE18NKGA8KAWoHo9rQfCT7HLTtQJR9nqHMlOR9rfpdR9Zi5kGNcS/o0xT1kb8zgGexuLJi+c/q+cSRz/bvUzM+BZlry1rgxcCitQjJulVdL5lid0afH0ZSq7MuYgLQ1clH1TI9iJo2Rzex95xL/3kDBKNov3nRAwrPNwyk8rT/MOsT43NUj8ecSmEzAksOAC6Yg9w7tzNtG3FzPj4sZaPTSy4rnurhwEuaEJ8nu4Fm2qisKuqHZznzngZve4zP5v/XFDwwf/37NHsU+kZXs55UL0ngi/fJEnLC/YfdVZKYEAAA=\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted/dist/vanilla-extract-webpack-plugin-extracted.cjs.js\"\nexport var image = '_1yohfdw1 rgw6ez7b9 rgw6ez1br rgw6ez4r';\nexport var container = '_1yohfdw2 rgw6ez419 rgw6ez443 rgw6ez3l';\nexport var marketplace = 'rgw6ez7al';\nexport var tab = '_1yohfdw5 rgw6ezcx rgw6ezb3 rgw6ez7ol rgw6ez4b3 rgw6ez7id rgw6ez2pl rgw6ez4pf rgw6ez79d';\nexport var creator = '_1yohfdw6';\nexport var columns = '_1yohfdw8 rgw6ez419 rgw6ez43f rgw6ez443 rgw6ez153 rgw6ez2al rgw6ez2b5 rgw6ez2cc rgw6ez2g3 rgw6ez2gn rgw6ez2hu rgw6ez253 rgw6ez25n rgw6ez26u rgw6ez2ll rgw6ez3r3 rgw6ez3qz rgw6ez3s0';\nexport var column = '_1yohfdw9';\nexport var columnRight = '_1yohfdwa';\nexport var audioControls = '_1yohfdwb';","import { OpacityHoverState } from 'components/Common'\nimport useCopyClipboard from 'hooks/useCopyClipboard'\nimport { CollectionInfoForAsset, GenieAsset } from 'nft/types'\nimport { putCommas } from 'nft/utils'\nimport { shortenAddress } from 'nft/utils/address'\nimport { useCallback } from 'react'\nimport { Copy } from 'react-feather'\nimport styled from 'styled-components/macro'\n\nconst Details = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 40px;\n\n  @media (max-width: 600px) {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n\n  @media (max-width: 450px) {\n    grid-template-columns: 1fr 1fr;\n  }\n`\n\nconst Header = styled.div`\n  color: ${({ theme }) => theme.textSecondary};\n  font-size: 14px;\n  line-height: 20px;\n`\n\nconst Body = styled.div`\n  color: ${({ theme }) => theme.textPrimary};\n  font-size: 14px;\n  line-height: 20px;\n  margin-top: 8px;\n`\n\nconst Center = styled.span`\n  align-items: center;\n  cursor: pointer;\n  display: flex;\n  gap: 8px;\n\n  ${OpacityHoverState}\n`\n\nconst CreatorLink = styled.a`\n  color: ${({ theme }) => theme.textPrimary};\n  text-decoration: none;\n\n  ${OpacityHoverState}\n`\n\nconst CopyIcon = styled(Copy)`\n  cursor: pointer;\n`\n\nconst GridItem = ({ header, body }: { header: string; body: React.ReactNode }) => {\n  return (\n    <div>\n      <Header>{header}</Header>\n      <Body>{body}</Body>\n    </div>\n  )\n}\n\nconst stringShortener = (text: string) => `${text.substring(0, 4)}...${text.substring(text.length - 4, text.length)}`\n\nconst DetailsContainer = ({ asset, collection }: { asset: GenieAsset; collection: CollectionInfoForAsset }) => {\n  const { address, tokenId, tokenType, creator } = asset\n  const { totalSupply } = collection\n\n  const [, setCopied] = useCopyClipboard()\n  const copy = useCallback(() => {\n    setCopied(address ?? '')\n  }, [address, setCopied])\n\n  return (\n    <Details>\n      <GridItem\n        header=\"Contract address\"\n        body={\n          <Center onClick={copy}>\n            {shortenAddress(address, 2, 4)} <CopyIcon size={13} />\n          </Center>\n        }\n      />\n      <GridItem header=\"Token ID\" body={tokenId.length > 9 ? stringShortener(tokenId) : tokenId} />\n      <GridItem header=\"Token standard\" body={tokenType} />\n      <GridItem header=\"Blockchain\" body=\"Ethereum\" />\n      <GridItem header=\"Total supply\" body={`${putCommas(totalSupply ?? 0)}`} />\n      <GridItem\n        header=\"Creator\"\n        body={\n          creator?.address && (\n            <CreatorLink\n              href={`https://etherscan.io/address/${creator.address}`}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              {shortenAddress(creator.address, 2, 4)}\n            </CreatorLink>\n          )\n        }\n      />\n    </Details>\n  )\n}\n\nexport default DetailsContainer\n","import { useState } from 'react'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport styled, { css } from 'styled-components/macro'\n\nconst Header = styled.div<{ isOpen: boolean }>`\n  display: flex;\n  border-radius: ${({ isOpen }) => (isOpen ? '16px 16px 0px 0px' : '16px')};\n  justify-content: space-between;\n  background-color: ${({ theme }) => theme.backgroundSurface};\n  padding: 14px 20px;\n  cursor: pointer;\n  border: 1px solid ${({ theme }) => theme.backgroundOutline};\n  margin-top: 28px;\n  width: 100%;\n  align-items: center;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.stateOverlayHover};\n  }\n\n  &:active {\n    background-color: ${({ theme }) => theme.stateOverlayPressed};\n  }\n\n  transition: ${({\n    theme: {\n      transition: { duration, timing },\n    },\n  }) => css`background-color ${duration.medium} ${timing.ease}`};\n`\n\nconst PrimaryHeader = styled.span`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  color: ${({ theme }) => theme.textPrimary};\n  font-weight: 500;\n  line-height: 28px;\n  font-size: 20px;\n`\n\nconst SecondaryHeader = styled.span`\n  font-size: 12px;\n  color: ${({ theme }) => theme.textSecondary};\n`\n\nconst SecondaryHeaderContainer = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 32px;\n  color: ${({ theme }) => theme.textPrimary};\n`\n\nconst ContentContainer = styled.div`\n  padding: 20px;\n  border: 1px solid ${({ theme }) => theme.backgroundOutline};\n  border-top: none;\n  border-radius: 0px 0px 16px 16px;\n  background-color: ${({ theme }) => theme.backgroundSurface}; ;\n`\n\nconst InfoContainer = ({\n  children,\n  primaryHeader,\n  secondaryHeader,\n  defaultOpen,\n}: {\n  children: JSX.Element\n  primaryHeader: string\n  secondaryHeader: React.ReactNode\n  defaultOpen?: boolean\n}) => {\n  const [isOpen, setIsOpen] = useState(!!defaultOpen)\n\n  return (\n    <div>\n      <Header isOpen={isOpen} onClick={() => setIsOpen(!isOpen)}>\n        <PrimaryHeader>\n          {primaryHeader} <SecondaryHeader>{secondaryHeader}</SecondaryHeader>\n        </PrimaryHeader>\n        <SecondaryHeaderContainer>{isOpen ? <ChevronUp /> : <ChevronDown />}</SecondaryHeaderContainer>\n      </Header>\n      {isOpen && <ContentContainer>{children}</ContentContainer>}\n    </div>\n  )\n}\n\nexport default InfoContainer\n","import { OpacityHoverState } from 'components/Common'\nimport { GenieAsset, Trait } from 'nft/types'\nimport qs from 'query-string'\nimport { useMemo } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components/macro'\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  gap: 16px;\n  max-width: 780px;\n\n  @media (max-width: 1080px) {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n\n  @media (max-width: 420px) {\n    grid-template-columns: 1fr 1fr;\n  }\n`\n\nconst GridItemContainer = styled(Link)`\n  background-color: ${({ theme }) => theme.backgroundInteractive};\n  border-radius: 12px;\n  cursor: pointer;\n  padding: 12px;\n  text-decoration: none;\n\n  ${OpacityHoverState}\n  min-width: 0;\n`\n\nconst TraitType = styled.div`\n  color: ${({ theme }) => theme.textSecondary};\n  font-weight: 600;\n  font-size: 10px;\n  line-height: 12px;\n  white-space: nowrap;\n  width: 100%;\n`\n\nconst TraitValue = styled.div`\n  color: ${({ theme }) => theme.textPrimary};\n  font-size: 16px;\n  line-height: 24px;\n  margin-top: 4px;\n  display: inline-block;\n\n  display: inline-block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  max-width: 100%;\n`\n\nconst GridItem = ({ trait, collectionAddress }: { trait: Trait; collectionAddress: string }) => {\n  const { trait_type, trait_value } = trait\n  const params = qs.stringify(\n    { traits: [`(\"${trait_type}\",\"${trait_value}\")`] },\n    {\n      arrayFormat: 'comma',\n    }\n  )\n\n  return (\n    <GridItemContainer to={`/nfts/collection/${collectionAddress}?${params}`}>\n      <TraitType>{trait_type}</TraitType>\n      <TraitValue>{trait_value}</TraitValue>\n    </GridItemContainer>\n  )\n}\n\nconst TraitsContainer = ({ asset }: { asset: GenieAsset }) => {\n  const traits = useMemo(() => asset.traits?.sort((a, b) => a.trait_type.localeCompare(b.trait_type)), [asset])\n\n  return (\n    <Grid>\n      {traits?.map((trait) => {\n        return <GridItem key={trait.trait_type} trait={trait} collectionAddress={asset.address} />\n      })}\n    </Grid>\n  )\n}\n\nexport default TraitsContainer\n","import { Trace } from '@uniswap/analytics'\nimport { PageName } from '@uniswap/analytics-events'\nimport { useWeb3React } from '@web3-react/core'\nimport { useDetailsQuery, useLoadDetailsQuery } from 'graphql/data/nft/Details'\nimport { useLoadNftBalanceQuery } from 'graphql/data/nft/NftBalance'\nimport { AssetDetails } from 'nft/components/details/AssetDetails'\nimport { AssetDetailsLoading } from 'nft/components/details/AssetDetailsLoading'\nimport { AssetPriceDetails } from 'nft/components/details/AssetPriceDetails'\nimport { useBag } from 'nft/hooks'\nimport { Suspense, useEffect, useMemo } from 'react'\nimport { useParams } from 'react-router-dom'\nimport styled from 'styled-components/macro'\n\nconst AssetContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  gap: 60px;\n  padding: 48px 48px 0 48px;\n\n  @media (max-width: 960px) {\n    padding: 40px 40px 0 40px;\n  }\n  @media (max-width: 540px) {\n    padding: 20px 20px 0 20px;\n  }\n  @media (max-width: 420px) {\n    padding: 16px 16px 0 16px;\n  }\n`\n\nconst AssetPriceDetailsContainer = styled.div`\n  min-width: 360px;\n  position: relative;\n\n  @media (max-width: 960px) {\n    display: none;\n  }\n`\n\nconst Asset = () => {\n  const { tokenId = '', contractAddress = '' } = useParams()\n  const data = useDetailsQuery(contractAddress, tokenId)\n\n  const [asset, collection] = useMemo(() => data ?? [], [data])\n\n  return (\n    <>\n      <Trace\n        page={PageName.NFT_DETAILS_PAGE}\n        properties={{ collection_address: contractAddress, token_id: tokenId }}\n        shouldLogImpression\n      >\n        {asset && collection ? (\n          <AssetContainer>\n            <AssetDetails collection={collection} asset={asset} />\n            <AssetPriceDetailsContainer>\n              <AssetPriceDetails collection={collection} asset={asset} />\n            </AssetPriceDetailsContainer>\n          </AssetContainer>\n        ) : null}\n      </Trace>\n    </>\n  )\n}\n\nconst AssetPage = () => {\n  const { tokenId, contractAddress } = useParams()\n  const { account } = useWeb3React()\n  const setBagExpanded = useBag((state) => state.setBagExpanded)\n  useLoadDetailsQuery(contractAddress, tokenId)\n  useLoadNftBalanceQuery(account, contractAddress, tokenId)\n\n  useEffect(() => {\n    setBagExpanded({ bagExpanded: false, manualClose: false })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Suspense fallback={<AssetDetailsLoading />}>\n      <Asset />\n    </Suspense>\n  )\n}\n\nexport default AssetPage\n"],"sourceRoot":""}